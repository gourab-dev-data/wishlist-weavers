<div class="wishlist-inspire__icon" x-data="wishlist">

  <button type="button" @click.debounce="addToWishlist()">
    <svg class="wishlist-inspire__icon--svg" viewBox="0 0 24 24" stroke-width="2" stroke="#000" :fill="wishlisted ? '#000': '#fff' ">
      <path d="M12 21.35l-1.45-1.32C5.4 15.73 2 12.27 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.77-3.4 7.23-8.55 11.53L12 21.35z"/>
    </svg>
    {% if block.settings.text != blank %}
      <span class="wishlist-inspire__icon--text">{{ block.settings.text }}</span>
    {% endif %}
  </button>

</div>

<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<script>
document.addEventListener('alpine:init', () => {
  Alpine.data('wishlist', () => ({
      init(){
        {% if customer  %}
        fetch(this.appUrl + "api/wishlist"+"?customerId={{ customer.id }}&productId={{ product.id }}&shop={{ shop.permanent_domain }}")
            .then(response => response.json())
            .then(result => {
                if(result.data.length > 0){
                  this.wishlisted = true;
                }
            })
            .catch(error => console.log('error', error));
        {% else %}
          let iWishlistmain = JSON.parse(localStorage.getItem("iWishlistmain")) || {};

          if (!Array.isArray(iWishlistmain['{{ product.id }}'])) {
            iWishlistmain['{{ product.id }}'] = [];
          }
          if (Array.isArray(iWishlistmain[{{ product.id }}]) && iWishlistmain[{{ product.id }}].length !== 0) {
            this.wishlisted = true; 
          }else{
            this.wishlisted = false;
          }
        {% endif %}
      },
      wishlisted: false,
      appUrl: "https://col-lessons-syndrome-painful.trycloudflare.com/",
      addToWishlist() {
          // TODO: send data to database save wishlist
          {% if customer  %}
            var formdata = new FormData();
            formdata.append("customerId", "{{ customer.id }}");
            formdata.append("productId", "{{ product.id }}");
            formdata.append("shop", "{{ shop.permanent_domain }}");
            formdata.append("_action", "CREATE");

            // If product is already in wishlist, remove it
            if(this.wishlisted){
              this.wishlisted = false;
              // update formdata _action to delete
              formdata.set("_action", "DELETE");
            }

            var requestOptions = {
              method: 'POST',
              body: formdata,
              redirect: 'follow'
            };

            fetch(this.appUrl + "api/wishlist", requestOptions)
              .then(response => response.json())
              .then(result => {
                  if(result.wishlisted){
                    this.wishlisted = true;
                  }else{
                    this.wishlisted = false;
                  }
              })
              .catch(error => console.log('error', error));``
            
          {% else %}
            const form = document.querySelector('product-form');
            const inputs = form.getElementsByTagName('input');
            let v_id = "";
            // Retrieve the wishlist from localStorage, if it exists
            let iWishlistmain = JSON.parse(localStorage.getItem("iWishlistmain")) || {};
            
            // Get the product ID from the form inputs
            for (let input of inputs) {
                if (input.name === 'id') {
                    v_id = input.value;
                }
            }            
            console.log(iWishlistmain);
            if (!Array.isArray(iWishlistmain['{{ product.id }}'])) {
              iWishlistmain['{{ product.id }}'] = [];
            }
            if (Array.isArray(iWishlistmain[{{ product.id }}]) && iWishlistmain[{{ product.id }}].length !== 0) {
              let exists = iWishlistmain['{{ product.id }}'].some(element => element === v_id);
              if (exists) {
                let index = iWishlistmain['{{ product.id }}'].findIndex(element => element === v_id);
                if (index !== -1) {
                  iWishlistmain['{{ product.id }}'].splice(index, 1);
                  this.wishlisted = false;
                }
                console.log('Value exists in the array.');              
              } else {       
                // Add the product ID to the wishlist
                iWishlistmain['{{ product.id }}'].push(v_id);              
                // Save the updated wishlist back to localStorage              
                console.log('Value does not exist in the array.');
                this.wishlisted = true;
              }
            }else{
              iWishlistmain['{{ product.id }}'].push(v_id);
              this.wishlisted = true;
            }            
            let iWishliststring = JSON.stringify(iWishlistmain);
            localStorage.setItem("iWishlistmain", iWishliststring);
            return;
          {% endif %}
      }
  }))
})
</script>


<style>
  .wishlist-inspire__icon{
    display: flex;
    justify-content: center;
    max-width: 44rem;
  }
  .wishlist-inspire__icon button{
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  .wishlist-inspire__icon--svg{
    width: 2rem;
    height: 2rem;
  }

</style>
{% schema %}
{
  "name": "Wishlist icon",
  "target": "section",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "product",
      "autofill": true
    },
    {
      "type": "text",
      "id": "text",
      "label": "Text",
      "default": "Add to wishlist"
    },
    {
      "type": "text",
      "id": "text_2",
      "label": "Text",
      "default": "Added to wishlist"
    },
    {
      "type": "color",
      "id": "colour",
      "label": "Icon Colour",
      "default": "#ff0000"
    }
  ]
}
{% endschema %}

